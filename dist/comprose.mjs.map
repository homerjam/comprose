{"version":3,"file":"comprose.mjs","sources":["../src/index.ts"],"sourcesContent":["// TODO: docs\n// TODO: random data types\n// TODO: random date in range (min/max date datatype?)\n// TODO: one-of array of templates helper\n// TODO: replace # with random number\n// TODO: object helper - use values as getters\n// TODO: use seed-able random\n\nimport { get, isArray, isString, sample, upperFirst } from 'lodash-es';\nimport _data from './data/data.js';\n\nexport const data = _data;\n\ntype Dataset = 'compromise' | 'faker';\ntype Locale = 'en' | 'fr';\n\ninterface ComproseParams {\n  dataset?: Dataset;\n  locale?: Locale;\n}\n\nexport class Comprose {\n  private _data: typeof data;\n\n  dataset: Dataset;\n  locale: Locale;\n  localeFallback: Locale;\n\n  constructor({ dataset, locale }: ComproseParams) {\n    this._data = data;\n    this.dataset = dataset || 'faker';\n    this.locale = locale || 'en';\n    this.localeFallback = locale || 'en';\n  }\n\n  get data(): typeof data.faker.en & typeof data.compromise {\n    if (this.dataset === 'faker') {\n      return (this._data.faker[this.locale] ||\n        this._data.faker[this.localeFallback]) as any;\n    }\n\n    if (this.dataset === 'compromise') {\n      return this._data.compromise as any;\n    }\n\n    return this._data.faker.en as any;\n  }\n\n  get(collectionOrSelector: string | string[] | string[][] = []) {\n    if (isString(collectionOrSelector)) {\n      return sample(get(this.data, collectionOrSelector, [])) || '';\n    }\n    if (isArray(collectionOrSelector)) {\n      return sample(collectionOrSelector.flat()) || '';\n    }\n    return '';\n  }\n\n  personFirstName(\n    { gender }: Record<'gender', 'male' | 'female' | undefined> = {\n      gender: undefined,\n    }\n  ) {\n    const name: string = gender\n      ? this.get(this.data.name[`${gender}FirstName`])\n      : this.get([\n          this.data.name.firstName,\n          this.data.name.femaleFirstName,\n          this.data.name.maleFirstName,\n        ]);\n\n    return upperFirst(name);\n  }\n\n  personLastName() {\n    return upperFirst(this.get(this.data.name.lastName));\n  }\n\n  personName(\n    { gender }: Record<'gender', 'male' | 'female' | undefined> = {\n      gender: undefined,\n    }\n  ) {\n    return `${this.personFirstName({ gender })} ${this.personLastName()}`;\n  }\n\n  companyCatchPhrase() {\n    return `${this.get(this.data.company.adjective)} ${this.get(\n      this.data.company.descriptor\n    )} ${this.get(this.data.company.noun)}`;\n  }\n}\n\n//   replaceSymbolWithNumber(string, symbol) {\n//     string = string || '';\n//     // default symbol is '#'\n//     if (symbol === undefined) {\n//       symbol = '#';\n//     }\n\n//     let str = '';\n//     for (let i = 0; i < string.length; i++) {\n//       if (string.charAt(i) == symbol) {\n//         str += faker.datatype.number(9);\n//       } else if (string.charAt(i) == '!') {\n//         str += faker.datatype.number({ min: 2, max: 9 });\n//       } else {\n//         str += string.charAt(i);\n//       }\n//     }\n//     return str;\n//   }\n"],"names":[],"mappings":";;;MAWa,OAAO;eAUE;AAAA,EACZ;AAAA,EAER;AAAA,EACA;AAAA,EACA;AAAA,EAEA,YAAY,EAAE,SAAS,UAA0B;AAC/C,SAAK,QAAQ;AACb,SAAK,UAAU,WAAW;AAC1B,SAAK,SAAS,UAAU;AACxB,SAAK,iBAAiB,UAAU;AAAA;AAAA,MAG9B,OAAsD;AACxD,QAAI,KAAK,YAAY,SAAS;AAC5B,aAAQ,KAAK,MAAM,MAAM,KAAK,WAC5B,KAAK,MAAM,MAAM,KAAK;AAAA;AAG1B,QAAI,KAAK,YAAY,cAAc;AACjC,aAAO,KAAK,MAAM;AAAA;AAGpB,WAAO,KAAK,MAAM,MAAM;AAAA;AAAA,EAG1B,IAAI,uBAAuD,IAAI;AAC7D,QAAI,SAAS,uBAAuB;AAClC,aAAO,OAAO,IAAI,KAAK,MAAM,sBAAsB,QAAQ;AAAA;AAE7D,QAAI,QAAQ,uBAAuB;AACjC,aAAO,OAAO,qBAAqB,WAAW;AAAA;AAEhD,WAAO;AAAA;AAAA,EAGT,gBACE,EAAE,WAA4D;AAAA,IAC5D,QAAQ;AAAA,KAEV;AACA,UAAM,OAAe,SACjB,KAAK,IAAI,KAAK,KAAK,KAAK,GAAG,sBAC3B,KAAK,IAAI;AAAA,MACP,KAAK,KAAK,KAAK;AAAA,MACf,KAAK,KAAK,KAAK;AAAA,MACf,KAAK,KAAK,KAAK;AAAA;AAGrB,WAAO,WAAW;AAAA;AAAA,EAGpB,iBAAiB;AACf,WAAO,WAAW,KAAK,IAAI,KAAK,KAAK,KAAK;AAAA;AAAA,EAG5C,WACE,EAAE,WAA4D;AAAA,IAC5D,QAAQ;AAAA,KAEV;AACA,WAAO,GAAG,KAAK,gBAAgB,EAAE,aAAa,KAAK;AAAA;AAAA,EAGrD,qBAAqB;AACnB,WAAO,GAAG,KAAK,IAAI,KAAK,KAAK,QAAQ,cAAc,KAAK,IACtD,KAAK,KAAK,QAAQ,eACf,KAAK,IAAI,KAAK,KAAK,QAAQ;AAAA;AAAA;;;;"}